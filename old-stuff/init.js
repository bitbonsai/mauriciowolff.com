// tweet plugin
;(function(d){d.fn.tweet=function(h){function e(b,a){if(typeof b==="string"){var d=b,e;for(e in a)var f=a[e],d=d.replace(RegExp("{"+e+"}","g"),f===null?"":f);return d}else return b(a)}function f(b,a){return function(){var e=[];this.each(function(){e.push(this.replace(b,a))});return d(e)}}function j(b){var a=parseInt(((arguments.length>1?arguments[1]:new Date).getTime()-b)/1E3,10),d="",d=a<60?a+" seconds ago":a<120?"a minute ago":a<2700?parseInt(a/60,10).toString()+" minutes ago":a<7200?"an hour ago":a<86400?""+parseInt(a/3600,10).toString()+" hours ago":a<172800?"a day ago":parseInt(a/86400,10).toString()+" days ago";return"about "+d}function k(){var c="https:"==document.location.protocol?"https:":"http:",a=b.fetch===null?b.count:b.fetch;if(b.list)return c+"//"+b.twitter_api_url+"/1/"+b.username[0]+"/lists/"+b.list+"/statuses.json?page="+b.page+"&per_page="+a+"&callback=?";else if(b.favorites)return c+"//"+b.twitter_api_url+"/favorites/"+b.username[0]+".json?page="+b.page+"&count="+a+"&callback=?";else if(b.query===null&&b.username.length==1)return c+"//"+b.twitter_api_url+"/1/statuses/user_timeline.json?screen_name="+b.username[0]+"&count="+a+(b.retweets?"&include_rts=1":"")+"&page="+b.page+"&callback=?";else{var d=b.query||"from:"+b.username.join(" OR from:");return c+"//"+b.twitter_search_url+"/search.json?&q="+encodeURIComponent(d)+"&rpp="+a+"&page="+b.page+"&callback=?"}}function l(c){var a={};a.item=c;a.source=c.source;a.screen_name=c.from_user||c.user.screen_name;a.avatar_size=b.avatar_size;a.avatar_url="https:"==document.location.protocol?(c.profile_image_url||c.user.profile_image_url).replace(/^http:/,"https:"):c.profile_image_url||c.user.profile_image_url;a.retweet=typeof c.retweeted_status!="undefined";a.tweet_time=Date.parse(c.created_at.replace(/^([a-z]{3})( [a-z]{3} \d\d?)(.*)( \d{4})$/i,"$1,$2$4$3"));a.join_text=b.join_text=="auto"?c.text.match(/^(@([A-Za-z0-9-_]+)) .*/i)?b.auto_join_text_reply:c.text.match(g)?b.auto_join_text_url:c.text.match(/^((\w+ed)|just) .*/im)?b.auto_join_text_ed:c.text.match(/^(\w*ing) .*/i)?b.auto_join_text_ing:b.auto_join_text_default:b.join_text;a.tweet_id=c.id_str;a.twitter_base="http://"+b.twitter_url+"/";a.user_url=a.twitter_base+a.screen_name;a.tweet_url=a.user_url+"/status/"+a.tweet_id;a.reply_url=a.twitter_base+"intent/tweet?in_reply_to="+a.tweet_id;a.retweet_url=a.twitter_base+"intent/retweet?tweet_id="+a.tweet_id;a.favorite_url=a.twitter_base+"intent/favorite?tweet_id="+a.tweet_id;a.retweeted_screen_name=a.retweet&&c.retweeted_status.user.screen_name;a.tweet_relative_time=j(a.tweet_time);a.tweet_raw_text=a.retweet?"RT @"+a.retweeted_screen_name+" "+c.retweeted_status.text:c.text;a.tweet_text=d([a.tweet_raw_text]).linkUrl().linkUser().linkHash()[0];a.tweet_text_fancy=d([a.tweet_text]).makeHeart().capAwesome().capEpic()[0];a.user=e('<a class="tweet_user" href="{user_url}">{screen_name}</a>',a);a.join=b.join_text?e(' <span class="tweet_join">{join_text}</span> ',a):" ";a.avatar=a.avatar_size?e('<a class="tweet_avatar" href="{user_url}"><img src="{avatar_url}" height="{avatar_size}" width="{avatar_size}" alt="{screen_name}\'s avatar" title="{screen_name}\'s avatar" border="0"/></a>',a):"";a.time=e('<span class="tweet_time"><a href="{tweet_url}" title="view tweet on twitter">{tweet_relative_time}</a></span>',a);a.text=e('<span class="tweet_text">{tweet_text_fancy}</span>',a);a.reply_action=e('<a class="tweet_action tweet_reply" href="{reply_url}">reply</a>',a);a.retweet_action=e('<a class="tweet_action tweet_retweet" href="{retweet_url}">retweet</a>',a);a.favorite_action=e('<a class="tweet_action tweet_favorite" href="{favorite_url}">favorite</a>',a);return a}var b=d.extend({username:null,list:null,favorites:!1,query:null,avatar_size:null,count:3,fetch:null,page:1,retweets:!0,intro_text:null,outro_text:null,join_text:null,auto_join_text_default:"",auto_join_text_ed:"i",auto_join_text_ing:"i am",auto_join_text_reply:"i replied to",auto_join_text_url:"",loading_text:null,refresh_interval:null,twitter_url:"twitter.com",twitter_api_url:"api.twitter.com",twitter_search_url:"search.twitter.com",template:"{avatar}{time}{join}{text}",comparator:function(b,a){return a.tweet_time- b.tweet_time},filter:function(){return!0}},h),g=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/gi;d.extend({tweet:{t:e}});d.fn.extend({linkUrl:f(g,function(b){return'<a href="'+(/^[a-z]+:/i.test(b)?b:"http://"+b)+'">'+b+"</a>"}),linkUser:f(/@(\w+)/gi,'@<a href="http://'+b.twitter_url+'/$1">$1</a>'),linkHash:f(/(?:^| )[\#]+([\w\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u00ff\u0600-\u06ff]+)/gi,' <a href="http://'+b.twitter_search_url+"/search?q=&tag=$1&lang=all"+(b.username&&b.username.length==1?"&from="+b.username.join("%2BOR%2B"):"")+'">#$1</a>'),capAwesome:f(/\b(awesome)\b/gi,'<span class="awesome">$1</span>'),capEpic:f(/\b(epic)\b/gi,'<span class="epic">$1</span>'),makeHeart:f(/(&lt;)+[3]/gi,"<tt class='heart'>&#x2665;</tt>")});return this.each(function(c,a){var f=d('<ul class="tweet_list unstyled">').appendTo(a),g='<p class="tweet_intro">'+b.intro_text+"</p>",h='<p class="tweet_outro">'+b.outro_text+"</p>",i=d('<p class="loading">'+b.loading_text+"</p>");if(b.username&&typeof b.username=="string")b.username=[b.username];b.loading_text&&d(a).append(i);d(a).bind("tweet:load",function(){d.getJSON(k(),function(c){b.loading_text&&i.remove();b.intro_text&&f.before(g);f.empty();c=d.map(c.results||c,l);c=d.grep(c,b.filter).sort(b.comparator).slice(0,b.count);f.append(d.map(c,function(a){return"<li>"+e(b.template,a)+"</li>"}).join("")).children("li:first").addClass("tweet_first").end().children("li:odd").addClass("tweet_even").end().children("li:even").addClass("tweet_odd");b.outro_text&&f.after(h);d(a).trigger("loaded").trigger(c.length===0?"empty":"full");b.refresh_interval&&window.setTimeout(function(){d(a).trigger("tweet:load")},1E3*b.refresh_interval)})}).trigger("tweet:load")})}})(jQuery);
// tweet plugin

// github badge
;(function(c){(!window.console||!console.firebug)&&function(){var a=["log","debug","info","warn","error","assert","dir","dirxml","group","groupEnd","time","timeEnd","count","trace","profile","profileEnd"],b=0;for(window.console={};b<a.length;b+=1)window.console[a[b]]=c.noop}();var f=function(a,b){return a.replace(/\{\{([-_a-z]+)\}\}/g,function(a,c){return b[c]?b[c]:"None"})},o=function(a,b){var h="http://github.com/api/v2/json/user/show/"+b.login+"?callback=?",i="http://github.com/api/v2/json/repos/show/"+b.login+"?callback=?",g=c(a).html(f('<div class="ghb_badge {{theme}}"><div class="ghb_badge_header"></div><div class="ghb_user_nav"><a class="ghb_user_info_nav chosen" rel="ghb_badge_user_info" href="#">User Info</a><a class="ghb_user_repo_nav"        rel="ghb_badge_user_repos" href="#">Repos</a></div><div class="ghb_badge_user_info" style="display:none;"><h2>User Info</h2><div></div></div><div class="ghb_badge_user_repos" style="display:none;"><h2>Public {{user_badge_title}}</h2><ul class="ghb_repo_list"></ul><div class="ghb_repo_goto"></div></div></div>',b)),e=g.find(".ghb_badge_header"),j=g.find(".ghb_badge_user_info"),k=g.find(".ghb_repo_goto"),l=g.find(".ghb_repo_list");c.getJSON(h,function(a){var d=c.extend({},b,a.user);e.html(f('<h1><a target="_blank" href="http://github.com/{{login}}">{{login}}\'s GitHub</a> ({{public_repo_count}})</h1>',d));b.include_github_logo&&e.prepend(f('<a target="_blank" href="http://github.com"><img src="{{image_path}}ghb_logo.png" alt="GitHub"></a>',d));j.html(f('<img src="http://www.gravatar.com/avatar/{{gravatar_id}}" />{{name}}<dl><dt>Public Repos:</dt><dd><a target="_blank" href="http://github.com/{{login}}/repositories">{{public_repo_count}}</a></dd><dt>Followers:</dt><dd><a target="_blank" href="http://github.com/{{login}}/followers">{{followers_count}}</a></dd><dt>Following:</dt><dd><a target="_blank" href="http://github.com/{{login}}/following">{{following_count}}</a></dd><dt>Public Gists:</dt><dd><a target="_blank" href="http://gist.github.com/{{login}}">{{public_gist_count}}</a></dd></dl>',d));a.user.public_repo_count>b.repo_count-1?(d.remaining=a.user.public_repo_count-b.repo_count,k.html(f('<a href="http://github.com/{{login}}/repositories">View All {{user_badge_title}} ({{remaining}} More) ... </a>',d))):k.html('<a href="http://github.com/'+b.login+'">'+b.login+" at GitHub</a>");j.show()});c.getJSON(i,function(a){if(a.length===0)l.html('<li class="no_records">'+b.login+" Does Not Have Any Repos</li>");else{var d=[];c.each(a.repositories,function(a,c){d.push(f('<li class="ghb_user_repo_item"><a target="_blank" href="{{url}}">{{name}}</a> <div>{{description}}</div></li>',c));if(a===b.repo_count-1)return!1});b.sorting!=="ascending"&&d.reverse();l.html(d.join("")).children().filter(":first").addClass("firstrepo").end().filter(":last").addClass("lastrepo")}})},p=function(a,b){var h="http://github.com/api/v2/json/repos/show/"+b.login+"/"+b.repo_name+"?callback=?",i="http://github.com/api/v2/json/issues/list/"+b.login+"/"+b.repo_name+"/open?callback=?",g="http://github.com/api/v2/json/commits/list/"+b.login+"/"+b.repo_name+"/"+b.repo_branch+"?callback=?",e=c(a).html(f('<div class="ghb_badge {{theme}}"><div class="ghb_badge_header"></div><div class="ghb_repo_nav"><a class="ghb_repo_info_nav chosen" rel="ghb_repo_info"    href="#">Repo Info</a><a class="ghb_repo_commits_nav"     rel="ghb_repo_commits" href="#">Commits</a><a class="ghb_repo_issues_nav"      rel="ghb_repo_issues"  href="#">Issues</a></div><div class="ghb_repo_info" style="display:none;"></div><div class="ghb_repo_issues" style="display:none;"><h2>Open Issues</h2><ul class="ghb_issue_list"></ul><div class="ghb_repo_goto_issues"></div></div><div class="ghb_repo_commits" style="display:none;"><h2>Commits</h2><ul class="ghb_commit_list"><li class="no_records">There are no commits in the {{repo_branch}} branch</li></ul><div class="ghb_repo_goto_commits"></div></div></div>',b)),j=e.find(".ghb_badge_header"),k=e.find(".ghb_repo_info"),l=e.find(".ghb_issue_list"),m=e.find(".ghb_repo_goto_issues").hide(),d=e.find(".ghb_repo_goto_commits").hide(),n=e.find(".ghb_commit_list");n.find(".no_commits");c.getJSON(h,function(a){j.html('<h1><a target="_blank" href="'+a.repository.url+'">'+a.repository.name+"</a></h1>");b.include_github_logo&&j.prepend(f('<a target="_blank" href="http://github.com"><img src="{{image_path}}ghb_logo.png" alt="GitHub"></a>',b));k.html(f('<p>{{description}}</p><p><a target="_blank" href="{{url}}">{{url}}</a></p><dl class="repo_info_list"><dt>Watchers:</dt><dd>{{watchers}}</dd><dt>Created:</dt><dd>{{created_at}}</dd><dt>Last Updated:</dt><dd>{{pushed_at}}</dd></dl>',a.repository));m.html('<a href="'+a.repository.url+'/issues">View All Issues</a>');d.html('<a href="'+a.repository.url+"/commits/"+b.repo_branch+'">View All Commits</a>');k.show()});c.getJSON(i,function(a){if(a.issues.length===0)l.html('<li class="no_records">There are no open issues for this repo.</li>');else{m.show();var d=[];c.each(a.issues,function(a,e){var h=c.extend({},b,e);d.push(f('<li><a target="_blank" href="http://github.com/{{login}}/{{repo_name}}/issues#issue/{{number}}">{{title}}<span title="{{user}} @ {{created_at}}">by {{user}}</span></a><div>{{body}}</div></li>',h));if(a===b.issue_count-1)return!1});b.sorting!=="ascending"&&d.reverse();l.html(d.join("")).children().filter(":first").addClass("firstrepo").end().filter(":last").addClass("lastrepo")}});c.getJSON(g,function(a){var e=[];c.each(a.commits,function(a,c){e.push('<li><a target="_blank" href="'+c.url+'">'+c.message+'<span title="'+c.author.name+" @ "+c.committed_date+'">by '+c.author.login+"</span></a></li>");if(a===b.commit_count-1)return!1});b.sorting!=="ascending"&&e.reverse();n.html(e.join("")).children().filter(":first").addClass("firstrepo").end().filter(":last").addClass("lastrepo");d.show()})};c.fn.GitHubBadge=function(a){var b=this,a=jQuery.extend({},c.fn.GitHubBadge.defaults,a);console.group("GitHubBadge");console.log("Options parsed as: %o",a);if(!a.login)return console.log("%s",a.login+" is undefined, not doing anything."),this;if(a.kind==="user")o(this,a);else if(a.kind==="project"){if(!a.repo_name)return console.log("%s",a.repo_name+" is undefined, not doing anything."),this;p(this,a)}this.delegate(".ghb_user_nav a, .ghb_repo_nav a","click",function(f){f.preventDefault();var f=b.find(".chosen").removeClass("chosen").attr("rel"),i=c(this).addClass("chosen").attr("rel");b.find("."+f).hide();b.find("."+i)[a.animate_style==="slide"?"slideDown":"show"]()});this.delegate("ul.ghb_repo_list li, ul.ghb_issue_list li","mouseenter",function(){c(this).find("div").show()});this.delegate("ul.ghb_repo_list li, ul.ghb_issue_list li","mouseleave",function(){c(this).find("div").hide()});console.groupEnd();return this};c.fn.GitHubBadge.defaults={login:null,kind:"user",sorting:"ascending",theme:"github",include_github_logo:!0,image_path:"img/",animate_style:"slide",show_repos:!0,user_badge_title:"Repositories",repo_count:"10",repo_name:null,repo_branch:"master",show_issues:!0,issue_count:"10",show_commits:!0,commit_count:"10"}})(jQuery);
// github badge

var mw = {

	dropDowns: function(){
		$(".dropdown-toggle").click(function (e) {
			var $li = $(this).parent("li").toggleClass('open');
			return false;
		});
	},

	socialTabs: function(){
		var $tabs = $('.tab');
		
		$tabs.click(function(e) {
			e.preventDefault();

			var $t = $(this),
				$tabContents = $('.tabContent'),
				href = $t.children('a').attr('href');

			$tabs.removeClass('active');
			$t.addClass('active');
			$tabContents.hide();
			$(href).show();

		});
	},
	
	tweets: function(){
		$("#twitter").tweet({
			join_text: "auto",
			username: "bitbonsai",
			avatar_size: 28,
			count: 5,
			loading_text: "loading tweets..."
		});
		
		$("#twittermw").tweet({
			join_text: "auto",
			username: "mw74",
			avatar_size: 28,
			count: 5,
			loading_text: "loading tweets..."
		});
	},
	
	github: function(){
		$("#github").GitHubBadge({
			login: "bitbonsai"
		});
	},
	
	init: function(){
		this.tweets();
		this.dropDowns();
		this.socialTabs();
		this.github();
	}
	
};

mw.init();
